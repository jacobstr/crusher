language: generic

services:
  - docker

stages:
  - name: build
    if: branch != master
  - name: build-and-push
    if: branch == master
  - name: deploy
    if: branch == master

jobs:
  include:
    - stage: build
      script:
      - export WORKER_IMAGE=koobz/crusher-worker:${TRAVIS_COMMIT:0:8}
      - cd worker
      - docker build -t $WORKER_IMAGE .
    - script:
      - export SERVER_IMAGE=koobz/crusher-server:${TRAVIS_COMMIT:0:8}
      - cd server
      - docker build -t $SERVER_IMAGE .
    - stage: build-and-push
      script:
      - export WORKER_IMAGE=koobz/crusher-worker:${TRAVIS_COMMIT:0:8}
      - cd worker
      - docker build -t $WORKER_IMAGE .
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker push $WORKER_IMAGE
    - script:
      - export SERVER_IMAGE=koobz/crusher-server:${TRAVIS_COMMIT:0:8}
      - cd server
      - docker build -t $SERVER_IMAGE .
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker push $SERVER_IMAGE
    - stage: deploy
      script:
        - export SERVER_IMAGE=koobz/crusher-server:${TRAVIS_COMMIT:0:8}
        - export WORKER_IMAGE=koobz/crusher-worker:${TRAVIS_COMMIT:0:8}
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.16.0/bin/linux/amd64/kubectl
        - chmod +x ./kubectl
        - sudo mv kubectl /usr/local/bin/kubectl
        - curl -sL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v3.8.5/kustomize_v3.8.5_linux_amd64.tar.gz | tar xvz
        - chmod +x ./kustomize
        - sudo mv kustomize /usr/local/bin/kustomize
        - mkdir ~/.kube
        - echo "$KUBECONFIG" | base64 -d > ~/.kube/config
        - export KUBECONFIG=~/.kube/config
        - cd deploy/env/ci
        - kustomize edit set image "koobz/crusher-worker=${WORKER_IMAGE}"
        - kustomize edit set image "koobz/crusher-server=${SERVER_IMAGE}"
        - cat kustomization.yaml
        - kustomize build . | grep image
        - kustomize build . | kubectl apply --context crusher -n crusher --token $KUBECTL_TOKEN -f -
